import React, { useState, useEffect, useRef} from 'react';
import { csv } from 'd3';
import {BrowserRouter,Routes,Route,Link, useParams} from 'react-router-dom';
import { CSVLink } from 'react-csv';
import './Style.css';
import { Button, Col, Row } from 'react-bootstrap';
import PDF, { Text, AddPage, Line, Image, Table, Html } from 'jspdf-react'
import ReactToPrint from 'react-to-print';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
const styleH1 = {
    fontSize: '15px',
    textAlign: 'center',
    color: 'red'
  };
   
  const invisibleStyle = {
    display: 'none',
  };
   


class MasterSchedulePage extends React.Component{
  constructor(props){
    super(props);
    this.state={schedule:[]};
}
callAPI(){
  const splitUrl = window.location.href.split("/");
  const folderID = splitUrl[splitUrl.length-1];
  const dfolder = folderID.split('+')[0];
  const cfolder = folderID.split('+')[1];
  const sfolder = folderID.split('+')[2];
  fetch("http://localhost:9000/getData/getMasterSchedule?dfolder="+dfolder+"&cfolder="+cfolder+"&sfolder="+sfolder)
        .then(res => res.json())
        .then(results => this.setState({schedule: results},()=>console.log('Schedule fetched..'
        ,results)));
}
componentWillMount(){
    this.callAPI();
}
  render(){
    //<CSVLink {...csvReport }> Export to CSV </CSVLink> to be added
    const splitUrl = window.location.href.split("/");
    const folderID = splitUrl[splitUrl.length-1];
    const dfolder = folderID.split('+')[0];
    const cfolder = folderID.split('+')[1];
    const sfolder = folderID.split('+')[2];
    var constraintFolder = cfolder.replace("%20"," ");
    var sem = constraintFolder.split('_')[0][constraintFolder.split('_')[0].length-1];
    var presentationName = constraintFolder.split('_')[1];
    var academicYear = dfolder.replace("-","/");
    var genDate = sfolder.split("_")[1];
    var genTime = sfolder.split("_")[2];
    var genDay=genDate[4]+genDate[5];
    var genMonth=genDate[2]+genDate[3];
    var genYear=genDate[0]+genDate[1];
    var genHour=genTime[0]+genTime[1];
    var genMin=genTime[2]+genTime[3];
    const downloadPDF=()=>{
      var doc = new jsPDF();
      doc.text(15, 20, presentationName+' (Semester '+sem+', '+academicYear+')');
      doc.setFontSize(15);
      doc.text(15, 30, 'Master Schedule (Time generated: '+genDay+'/'+genMonth+'/'+genYear+' '+genHour+':'+genMin+')');
      doc.autoTable({html:'#masterScheduleTable',styles: { fontSize: 7 },startY:40});
      doc.setFontSize(9);
      doc.save('MasterSchedule.pdf');
    }
    /*
                <ReactToPrint
                trigger={()=>{
                    return <Button onClick={downloadPDF}>Print</Button>
                }}
                content={()=>this.componentRef}
                documentTitle="Master Schedule"
                pageStyle="print"
                />
    */
   const backLink="/schedulemenu/"+folderID;
    return ( 

   
        <div>
        <Row>
        <Col><ReactToPrint
            trigger={()=>{
                return <Button>Print</Button> 
            }}
            content={()=>this.componentRef}
            documentTitle="Master Schedule"
            pageStyle="print"
        /></Col>
          <Col><Button variant="secondary" onClick={()=>{window.location.href=backLink}}>Back</Button></Col>

        </Row>
        
            <div className='recordList' id='masterSchedule' ref={el=>(this.componentRef=el)}>
                <h3>{presentationName} (Semester {sem}, {academicYear})</h3>
                <h5>Master Schedule (Time generated by scheduler: {genDay}/{genMonth}/{genYear} {genHour}:{genMin})</h5>
                    <table id='masterScheduleTable'>
                        <thead>
                            <tr>
                                <th style={{ border: 'solid' }}>#</th>
                                <th style={{ border: 'solid' }}>Matric No</th>
                                <th style={{ border: 'solid' }}>Name</th>
                                <th style={{ border: 'solid' }}>Title</th>
                                <th style={{ border: 'solid' }}>Supervisor</th>
                                <th style={{ border: 'solid' }}>Examiner 1</th>
                                <th style={{ border: 'solid' }}>Examiner 2</th>
                                <th style={{ border: 'solid' }}>Time</th>
                                <th style={{ border: 'solid' }}>Venue</th>
                            </tr>
                        </thead>
                        <tbody>
                            {this.state.schedule.map(presentation =>
                            <tr key="{presentation}">  
                                <td style={{ border: 'solid' }}>{presentation.index}</td>
                                <td style={{ border: 'solid' }}>{presentation.matricno}</td>
                                <td style={{ border: 'solid' }}>{presentation.studentname}</td>
                                <td style={{ border: 'solid' }}>{presentation.title}</td>
                                <td style={{ border: 'solid' }}>{presentation.supervisor}</td>
                                <td style={{ border: 'solid' }}>{presentation.examiner1}</td>
                                <td style={{ border: 'solid' }}>{presentation.examiner2}</td>
                                <td style={{ border: 'solid' }}>{presentation.time}</td>
                                <td style={{ border: 'solid' }}>{presentation.venue}</td>
                            </tr>
                            )}
                        </tbody>  
                    </table>
                </div>

        </div>
        

  );
  }
}

export default MasterSchedulePage;